@page "/"
@page "/page/{CurrentPageIndex:int}"
@inject HttpClient HttpClient
@inject ISessionStorageService SessionStorageService;
@inject NavigationManager MyNavigationManager
@inject IJSRuntime JSRunTime

<PageTitle>Trang chủ</PageTitle>

<div class="row mt-3">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body px-5">
                <div class="card-title">Danh sách sản phẩm : @CurrentPageIndex : @PageCount</div> <hr/>
                <div class="row">
                    @if (SanPhamViewModels != null)
                    {
                        @foreach (var x in @SanPhamViewModels.Skip((CurrentPageIndex - 1) * MaxRow).Take(MaxRow))
                        {
                            <div class="col-12 col-sm-6 col-md-6 col-lg-6 col-xl-3">
                                <div class="product">
                                    <div class="product-img">
                                        <img src="@x.ChiTietSp?.Anh" alt="">
                                        <div class="add-to-cart">
                                            <a><button @onclick="() => AddCart(x.ChiTietSp?.Id)" class="add-to-cart-btn"> add to cart <i class="fa fa-shopping-cart"></i></button></a>
                                        </div>
                                    </div>
                                    <div class="product-body">
                                        <h3 class="product-name"><a href="#" class="text-danger">@x.SanPham?.Ten (@x.MauSac?.Ten)</a></h3>
                                        <h4 class="product-price"> @string.Format("{0:0,0}", @x.ChiTietSp?.GiaBan) VNĐ <del class="product-old-price">@string.Format("{0:0,0}", @x.ChiTietSp?.GiaNhap) VNĐ</del></h4>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
                <div class="store-filter clearfix">
                    <nav>
                        <ul class="pagination justify-content-end">
                            <li class="page-item">
                                <NavLink class="page-link px-3" href="@Prev()"><i class="fa fa-angle-left"></i></NavLink>
                            </li>
                            @foreach (int x in Enumerable.Range(1, PageCount))
                            {
                                if (x == 1 && MyNavigationManager.Uri == "https://localhost:7007/")
                                {
                                    <li class="page-item">
                                        <NavLink class="page-link px-3 active" href="@ChangePage(1)" Match="NavLinkMatch.All">1</NavLink>
                                    </li>
                                    continue;
                                }
                                <li class="page-item">
                                    <NavLink class="page-link px-3" href="@ChangePage(x)" Match="NavLinkMatch.All">@(x)</NavLink>
                                </li>
                            }
                            <li class="page-item">
                                <NavLink class="page-link px-3" href="@Next()"><i class="fa fa-angle-right"></i></NavLink>
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<SanPhamViewModel>? SanPhamViewModels;
    private int MaxRow = 4;
    private int PageCount = 0;

    [Parameter]
    public int CurrentPageIndex { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if(CurrentPageIndex <= 0) CurrentPageIndex = 1;
        using (var httpClient = new HttpClient())
        {
            SanPhamViewModels = await httpClient.GetFromJsonAsync<List<SanPhamViewModel>>("https://localhost:7033/api/sanpham/getsanphamviewmodel");
            if (SanPhamViewModels != null) PageCount = (int)Math.Ceiling(SanPhamViewModels.Count() / (decimal)MaxRow);
        }
    }

    private string Next()
    {
        return CurrentPageIndex >= PageCount ? "page/1" : $"page/{CurrentPageIndex + 1}";
    }

    private string Prev()
    {
        return CurrentPageIndex <= 1 ? $"page/{PageCount}" : $"page/{CurrentPageIndex - 1}";
    }

    private string ChangePage(int x){
        return $"page/{x}";
    }

    private async Task<int> IsExist(Guid? id)
    {
        List<GioHangViewModel> cart = await SessionStorageService.GetItemAsync<List<GioHangViewModel>>("cart");
        if(cart != null){
            for (int i = 0; i < cart.Count; i++)
            {
                var result = cart[i]?.SanPhamViewModel?.ChiTietSp?.Id.Equals(id);
                if (result ?? false)
                {
                    return i;
                }
            }
        }
        return -1;
    }

    private async Task AddCart(Guid? id){
        if (await SessionStorageService.GetItemAsStringAsync("cart") == null)
        {
            List<GioHangViewModel> cart = new List<GioHangViewModel>();
            cart.Add(new GioHangViewModel() { SanPhamViewModel = SanPhamViewModels?.FirstOrDefault(c => c.ChiTietSp?.Id == id), Quantity = 1 });
            await SessionStorageService.SetItemAsync<List<GioHangViewModel>>("cart", cart);
            await JSRunTime.InvokeVoidAsync("showAlert", "Thành công");
        }else{
            List<GioHangViewModel> cart = await SessionStorageService.GetItemAsync<List<GioHangViewModel>>("cart");
            var index = await IsExist(id);
            if (index != -1)
            {
                cart[index].Quantity++;
            }
            else
            {
                cart.Add(new GioHangViewModel { SanPhamViewModel = SanPhamViewModels?.FirstOrDefault(c => c.ChiTietSp?.Id == id), Quantity = 1 });
            }
            await SessionStorageService.SetItemAsync<List<GioHangViewModel>>("cart", cart);
            await JSRunTime.InvokeVoidAsync("showAlert", "Thành công");
        }
    }

    public class GioHangViewModel
    {
        public SanPhamViewModel? SanPhamViewModel { get; set; }

        public int Quantity { get; set; }
    }
}
