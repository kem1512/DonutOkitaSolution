@page "/chitietsp"
@inject HttpClient HttpClient
@inject IJSRuntime JSRuntime

<PageTitle>Sản phẩm</PageTitle>
<div class="row mt-3">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <div class="card-title">Quản lý sản phẩm chi tiết</div> <hr/>
                <EditForm Model="@ChiTietSp">
                    <DataAnnotationsValidator />
                    <div class="row">
                        <div class="form-group col-6 pr-0">
                            <div class="d-flex justify-content-between">
                                <label>Sản phẩm</label>
                                <ValidationMessage For="@(() => ChiTietSp.IdSp)"></ValidationMessage>
                            </div>
                            <InputSelect class="custom-select" @bind-Value="ChiTietSp.IdSp">
                                @if (SanPhams != null)
                                {
                                    <option value>Chọn sản phẩm</option>
                                    @foreach (var x in SanPhams)
                                    {
                                        <option value="@x.Id">@x.Ten</option>
                                    }
                                }
                            </InputSelect>
                        </div>
                        <div class="form-group col-6">
                            <label>Năm bảo hành</label>
                            <InputNumber class="form-control" name="NamBh" @bind-Value="ChiTietSp.NamBh" placeholder="Nhập năm bảo hành"></InputNumber>
                        </div>
                        <div class="form-group col-3 pr-0">
                            <label>Giá nhập</label>
                            <InputNumber type="number" class="form-control" name="GiaNhap" @bind-Value="ChiTietSp.GiaNhap" placeholder="Nhập tên giá nhập"></InputNumber>
                        </div>
                        <div class="form-group col-3 pr-0">
                            <label>Giá bán </label>
                            <InputNumber type="number" class="form-control" name="GiaBan" @bind-Value="ChiTietSp.GiaBan" placeholder="Nhập giá bán"></InputNumber>
                        </div>
                        <div class="form-group col-6">
                            <label>Số lượng tồn kho </label>
                            <InputNumber type="number" class="form-control" name="SoLuongTon" @bind-Value="ChiTietSp.SoLuongTon" placeholder="Nhập số lượng tồn kho"></InputNumber>
                        </div>
                        <div class="form-group col-6 pr-0">
                            <div class="d-flex justify-content-between">
                                <label>Nhà sản xuất</label>
                                <ValidationMessage For="@(() => ChiTietSp.IdNsx)"></ValidationMessage>
                            </div>
                            <InputSelect class="custom-select" @bind-Value="ChiTietSp.IdNsx">
                                @if (Nsxs != null)
                                {
                                    <option value>Chọn nhà sản xuất</option>
                                    @foreach (var x in Nsxs)
                                    {
                                        <option value="@x.Id">@x.Ten</option>
                                    }
                                }
                            </InputSelect>
                        </div>
                        <div class="form-group col-6">
                            <div class="d-flex justify-content-between">
                                <label>Màu sắc</label>
                                <ValidationMessage For="@(() => ChiTietSp.IdMauSac)"></ValidationMessage>
                            </div>
                            <InputSelect class="custom-select" @bind-Value="ChiTietSp.IdMauSac">
                                @if (MauSacs != null)
                                {
                                    <option value>Chọn màu sắc</option>
                                    @foreach (var x in MauSacs)
                                    {
                                        <option value="@x.Id">@x.Ten</option>
                                    }
                                }
                            </InputSelect>
                        </div>
                        <div class="form-group col-6 pr-0">
                            <div class="d-flex justify-content-between">
                                <label>Dòng sản phẩm</label>
                                <ValidationMessage For="@(() => ChiTietSp.IdDongSp)"></ValidationMessage>
                            </div>
                            <InputSelect class="custom-select" @bind-Value="ChiTietSp.IdDongSp">
                                @if (DongSps != null)
                                {
                                    <option value>Chọn dòng sản phẩm</option>
                                    @foreach (var x in DongSps)
                                    {
                                        <option value="@x.Id">@x.Ten</option>
                                    }
                                }
                            </InputSelect>
                        </div>
                        <div class="form-group col-6">
                            <div class="d-flex justify-content-between">
                                <label>Ảnh sản phẩm</label> <br />
                                <ValidationMessage class="text-warning font-weight-bold" For="@(() => ChiTietSp.Anh)"></ValidationMessage>
                            </div>
                            <InputText class="form-control" @bind-Value="ChiTietSp.Anh" placeholder="Nhập link ảnh sản phẩm"></InputText>
                        </div>
                    </div>
                    <div class="form-group d-flex justify-content-between">
                        <div>
                            @if(ChiTietSp.Id == Guid.Empty){
                                <button type="submit" class="btn btn-success px-5 mr-1" @onclick="Create">Thêm</button>
                            }else{
                                <button class="btn btn-warning px-5 mr-1" @onclick="Update">Sửa</button>
                                <button class="btn btn-danger px-5" @onclick="Clear">Hủy</button>
                            }
                        </div>
                        <div>
                            <NavLink href="SanPham" class="btn btn-danger px-5 w-100">Sản phẩm</NavLink>
                        </div>
@*                        <div class="col-8">
                            <div class="row">
                               <div class="col-6">
                                    <NavLink href="SanPham" class="btn btn-danger px-5 w-100">Sản phẩm</NavLink>
                               </div>
                                <div class="col-6">
                                    <NavLink href="MauSac" class="btn btn-info px-5 w-100">Màu sắc</NavLink>
                                </div>
                                <div class="col-6">
                                    <NavLink href="Nsx" class="btn btn-secondary px-5 w-100">Nhà sản xuất</NavLink>
                                </div>
                                <div class="col-6">
                                    <NavLink href="DongSp" class="btn btn-success px-5 w-100">Dòng sản phẩm</NavLink>
                                </div>
                            </div>
                        </div>*@
                    </div>
                </EditForm>
                <h5 class="card-title">Danh sách sản phẩm</h5>
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>STT</th>
                                <th>Tên sản phẩm</th>
                                <th>Màu sắc</th>
                                <th>Nhà sản xuất</th>
                                <th>Giá nhập</th>
                                <th>Giá bán</th>
                                <th>Tồn kho</th>
                                <th>Thao tác</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (SanPhamViewModels != null)
                            {
                                @foreach (var x in SanPhamViewModels.Select((value, i) => new { i, value }))
                                {
                                    <tr>
                                        <td>@(x.i + 1)</td>
                                        <td>@x.value.SanPham?.Ten</td>
                                        <td>@x.value.MauSac?.Ten</td>
                                        <td>@x.value.Nsx?.Ten</td>
                                        <td>@string.Format("{0:0,0}", x.value.ChiTietSp?.GiaNhap)</td>
                                        <td>@string.Format("{0:0,0}", x.value.ChiTietSp?.GiaBan)</td>
                                        <td>@x.value.ChiTietSp?.SoLuongTon</td>
                                        <td>
                                            <button class="btn btn-success" @onclick="() => Display(x.value.ChiTietSp?.Id)">Sửa</button>
                                            <button class="btn btn-danger" @onclick="() => Delete(x.value.ChiTietSp?.Id)">Xóa</button>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<SanPham>? SanPhams;
    private List<MauSac>? MauSacs;
    private List<Nsx>? Nsxs;
    private List<DongSp>? DongSps;
    private List<SanPhamViewModel>? SanPhamViewModels;
    private ChiTietSp ChiTietSp = new ChiTietSp();
    private EditContext? editContext;
    protected override async Task OnInitializedAsync()
    {
        editContext = new EditContext(ChiTietSp);
        using (var httpClient = new HttpClient())
        {
            SanPhamViewModels = await httpClient.GetFromJsonAsync<List<SanPhamViewModel>>("https://localhost:7033/api/sanpham/getsanphamviewmodel");
            SanPhams = await httpClient.GetFromJsonAsync<List<SanPham>>("https://localhost:7033/api/sanpham");
            Nsxs = await httpClient.GetFromJsonAsync<List<Nsx>>("https://localhost:7033/api/nsx");
            DongSps = await httpClient.GetFromJsonAsync<List<DongSp>>("https://localhost:7033/api/dongsp");
            MauSacs = await httpClient.GetFromJsonAsync<List<MauSac>>("https://localhost:7033/api/mausac");
        }
    }

    private async Task Create()
    {
        if(editContext?.GetValidationMessages().Any() ?? true){
            using (var httpClient = new HttpClient())
            {
                using (var response = await httpClient.PostAsJsonAsync("https://localhost:7033/api/chitietsp", ChiTietSp))
                {
                    SanPhamViewModels = await httpClient.GetFromJsonAsync<List<SanPhamViewModel>>("https://localhost:7033/api/sanpham/getsanphamviewmodel");
                    ChiTietSp = new ChiTietSp();
                }
            }
        }
    }

    private async Task Delete(Guid? id)
    {
        using (var httpClient = new HttpClient())
        {
            using (await httpClient.DeleteAsync("https://localhost:7033/api/chitietsp/" + id))
            {
                SanPhamViewModels = await httpClient.GetFromJsonAsync<List<SanPhamViewModel>>("https://localhost:7033/api/sanpham/getsanphamviewmodel");
            }
        }
    }

    private async Task Update()
    {
        if (editContext?.GetValidationMessages().Any() ?? true)
        { 
            using (var httpClient = new HttpClient())
            {
                using (await httpClient.PutAsJsonAsync<ChiTietSp>("https://localhost:7033/api/chitietsp/" + ChiTietSp.Id, ChiTietSp))
                {
                    SanPhamViewModels = await httpClient.GetFromJsonAsync<List<SanPhamViewModel>>("https://localhost:7033/api/sanpham/getsanphamviewmodel");
                    ChiTietSp = new ChiTietSp();
                }
            }
        }
    }

    private async Task Display(Guid? id)
    {
        using (var httpClient = new HttpClient())
        {
            var result = await httpClient.GetFromJsonAsync<ChiTietSp>("https://localhost:7033/api/chitietsp/" + id);
            if(result != null)
                ChiTietSp = result;
        }
    }

    private void Clear(){
        ChiTietSp = new ChiTietSp();
    }
}
