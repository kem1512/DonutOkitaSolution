@page "/invoicedetail"
@page "/invoicedetail/{InvoiceId:guid}"
@using Data.DomainClass
@using System.Net.Http.Headers
@using Data.ViewModels
@inject ISessionStorageService Session
@inject NavigationManager NavigationManager

@if (HoaDonViewModels != null)
{
    <div class="container-fluid mt--7">
        <div class="row">
            <div class="col-xl-12 order-xl-1">
                <div class="card bg-secondary shadow mb-3">
                    <div class="card-header bg-white border-0">
                        <div class="row align-items-center">
                            <div class="col-12">
                                <strong class="mb-0">Thông tin hóa đơn</strong>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="px-lg-4">
                            <div class="row text-center mb-3">
                                <div class="col-3">
                                    <div class="step">
                                        <button style="border-radius: 20px; padding: 40px;" class="btn @ActiveStatus(0) mb-3"><i style="font-size: 35px" class="ni ni-single-copy-04"></i></button>
                                        <h4 class="text-muted">Đã xác nhận</h4>
                                        <p>@HoaDonViewModels?.FirstOrDefault()?.HoaDon?.NgayTao</p>
                                    </div>
                                </div>
                                <div class="col-3">
                                    <div class="step">
                                        <button style="border-radius: 20px;padding: 40px;" class="btn @ActiveStatus(1) mb-3" data-toggle="modal" data-target="#popup"><i style="font-size: 35px" class="ni ni-check-bold"></i></button>
                                        <h4 class="text-muted">Đang vận chuyển</h4>
                                        @if (Status >= 2)
                                        {
                                            <p>@HoaDonViewModels?.FirstOrDefault()?.HoaDon?.NgayShip</p>
                                        }
                                    </div>
                                </div>
                                <div class="col-3">
                                    <div class="step">
                                        <button style="border-radius: 20px;padding: 40px;" class="btn @ActiveStatus(2) mb-3" data-toggle="modal" data-target="#popup"><i style="font-size: 35px" class="ni ni-user-run"></i></button>
                                        <h4 class="text-muted">Đã nhận hàng</h4>
                                        @if (Status >= 2)
                                        {
                                            <p>@HoaDonViewModels?.FirstOrDefault()?.HoaDon?.NgayNhan</p>
                                        }
                                    </div>
                                </div>
                                <div class="col-3">
                                    <div class="step">
                                        <button style="border-radius: 20px;padding: 40px;" class="btn @ActiveStatus(3) mb-3" data-toggle="modal" data-target="#popup"><i style="font-size: 35px" class="ni ni-bag-17"></i></button>
                                        <h4 class="text-muted">Hoàn thành</h4>
                                        @if (Status >= 3)
                                        {
                                            <p>@HoaDonViewModels?.FirstOrDefault()?.HoaDon?.NgayThanhToan</p>
                                        }
                                    </div>
                                </div>
                            </div>
                            @if (HoaDonViewModels != null && SanPhamViewModels != null)
                            {
                                foreach (var x in HoaDonViewModels)
                                {
                                    foreach (var y in SanPhamViewModels.Where(c => c.ChiTietSp?.Id == x.HoaDonChiTiet?.IdChiTietSp))
                                    {
                                        <div class="row border shadow mb-3" style="background-color: white; border-radius: 25px">
                                            <div class="d-flex align-items-center p-3">
                                                <div class="col">
                                                    <a href=""><img src="@y.ChiTietSp?.Anh" class="w-50" /></a>
                                                </div>
                                                <div class="col">
                                                    <p>@y.SanPham?.Ten</p>
                                                    <p class="text-muted">Màu sắc : @y.MauSac?.Ten</p>
                                                </div>
                                                <div class="col">
                                                    <p><strong>@string.Format("{0:0,0}", y.ChiTietSp?.GiaBan) VNĐ</strong></p>
                                                </div>
                                                <div class="col">
                                                    <p>@x.HoaDon?.NgayTao</p>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                }
                            }
                            <div class="row justify-content-end">
                                <button class="btn btn-primary">Xác nhận @Status</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <Popup Message="Bạn có chắc muốn thay đổi trạng thái?" PopupType="Popup.PopupTypes.Confirm" Method="() => ChangeStatus((Status += 1) ?? 0)"></Popup>
    </div>
}

@code {
    private List<HoaDonViewModel>? HoaDonViewModels = new List<HoaDonViewModel>();

    private List<SanPhamViewModel>? SanPhamViewModels = new List<SanPhamViewModel>();

    private int? Status = 0;

    [Parameter]
    public Guid InvoiceId { get; set; }

    private string ActiveStatus(int val)
    {
        if (val <= Status)
            return "btn-success";
        return "";
    }

    private async Task ChangeStatus(int val)
    {
        if(await Session.GetItemAsStringAsync("isLogin") != null){
            using (var httpClient = new HttpClient())
            {
                httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", await Session.GetItemAsStringAsync("isLogin"));
                if (HoaDonViewModels != null)
                {
                    if (HoaDonViewModels.First().HoaDon != null)
                    {
                        HoaDonViewModels.First().HoaDon.TinhTrang = val;
                        if (val == 1)
                        {
                            HoaDonViewModels.First().HoaDon.NgayShip = DateTime.Now;
                        }
                        else
                        {
                            HoaDonViewModels[0].HoaDon.NgayNhan = DateTime.Now;
                            HoaDonViewModels[0].HoaDon.NgayThanhToan = DateTime.Now;
                        }
                        using (var httpResponse = await httpClient.PutAsJsonAsync<HoaDon>("https://localhost:7033/api/hoadon/" + HoaDonViewModels[0].HoaDon.Id, HoaDonViewModels[0].HoaDon))
                        {
                            if (httpResponse.IsSuccessStatusCode)
                                Status = val;
                        }
                    }
                }
            }
        }
    }

    protected async override Task OnInitializedAsync()
    {
        using (var httpClient = new HttpClient())
        {
            httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", await Session.GetItemAsStringAsync("isLogin"));
            HoaDonViewModels = await httpClient.GetFromJsonAsync<List<HoaDonViewModel>>("https://localhost:7033/api/hoadon/gethoadonviewmodel");
            SanPhamViewModels = await httpClient.GetFromJsonAsync<List<SanPhamViewModel>>("https://localhost:7033/api/sanpham/getsanphamviewmodel");
            if(HoaDonViewModels != null){
                HoaDonViewModels = HoaDonViewModels.Where(c => c.HoaDon?.Id == InvoiceId).ToList();
                Status = HoaDonViewModels.First().HoaDon?.TinhTrang;
            }
        }
    }
}
