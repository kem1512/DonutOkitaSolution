@page "/invoicedetail"
@page "/invoicedetail/{InvoiceId:guid}"
@using Data.DomainClass
@using System.Net.Http.Headers
@using Data.ViewModels
@inject ISessionStorageService Session
@inject NavigationManager NavigationManager
@layout LayoutAdmin

@if (HoaDonViewModels != null)
{
    <div class="container-fluid mt--7">
        <div class="row">
            <div class="col-xl-12 order-xl-1">
                <div class="card bg-secondary shadow mb-3">
                    <div class="card-header bg-white border-0">
                        <div class="row align-items-center">
                            <div class="col-12">
                                <strong class="mb-0">Thông tin hóa đơn</strong>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="px-lg-4">
                            <div class="row text-center mb-3">
                                <div class="col-3">
                                    <div class="step">
                                        <button style="border-radius: 20px; padding: 40px;" class="btn @ActiveStatus(HoaDonViewModels?.FirstOrDefault()?.HoaDon?.NgayTao) mb-3"><i style="font-size: 35px" class="ni ni-single-copy-04"></i></button>
                                        <h4 class="text-muted">Đã xác nhận</h4>
                                        <p>@HoaDonViewModels?.FirstOrDefault()?.HoaDon?.NgayTao</p>
                                    </div>
                                </div>
                                @if (HoaDonViewModels?.FirstOrDefault()?.HoaDon?.TinhTrang != 4)
                                {
                                    <div class="col-3">

                                        <div class="step">
                                            <button style="border-radius: 20px;padding: 40px;" @onclick="() => Display(1)" class="btn @ActiveStatus(HoaDonViewModels?.FirstOrDefault()?.HoaDon?.NgayShip) mb-3" data-toggle="modal" data-target="#popup"><i style="font-size: 35px" class="ni ni-check-bold"></i></button>
                                            <h4 class="text-muted">Đang vận chuyển</h4>
                                            @if (HoaDonViewModels?.FirstOrDefault()?.HoaDon?.NgayShip != null)
                                            {
                                                <p>@HoaDonViewModels?.FirstOrDefault()?.HoaDon?.NgayShip</p>
                                            }
                                        </div>
                                    </div>
                                    <div class="col-3">
                                        <div class="step">
                                            <button style="border-radius: 20px;padding: 40px;" @onclick="() => Display(2)" class="btn @ActiveStatus(HoaDonViewModels?.FirstOrDefault()?.HoaDon?.NgayNhan) mb-3" data-toggle="modal" data-target="#popup"><i style="font-size: 35px" class="ni ni-user-run"></i></button>
                                            <h4 class="text-muted">Đã nhận hàng</h4>
                                            @if (HoaDonViewModels?.FirstOrDefault()?.HoaDon?.NgayNhan != null)
                                            {
                                                <p>@HoaDonViewModels?.FirstOrDefault()?.HoaDon?.NgayNhan</p>
                                            }
                                        </div>
                                    </div>
                                    <div class="col-3">
                                        <div class="step">
                                            <button style="border-radius: 20px;padding: 40px;" @onclick="() => Display(3)" class="btn @ActiveStatus(HoaDonViewModels?.FirstOrDefault()?.HoaDon?.NgayThanhToan) mb-3" data-toggle="modal" data-target="#popup"><i style="font-size: 35px" class="ni ni-bag-17"></i></button>
                                            <h4 class="text-muted">Đã thanh toán</h4>
                                            @if (HoaDonViewModels?.FirstOrDefault()?.HoaDon?.NgayThanhToan != null)
                                            {
                                                <p>@HoaDonViewModels?.FirstOrDefault()?.HoaDon?.NgayThanhToan</p>
                                            }
                                        </div>
                                    </div>
                                }else{
                                    <div class="col-3">
                                        <div class="step">
                                            <button style="border-radius: 20px;padding: 40px;" class="btn btn-danger mb-3"><i style="font-size: 35px" class="ni ni-bag-17"></i></button>
                                            <h4 class="text-muted">Đã hủy</h4>
                                        </div>
                                    </div>
                                }
                            </div>
                            @if (HoaDonViewModels != null && SanPhamViewModels != null)
                            {
                                foreach (var x in HoaDonViewModels)
                                {
                                    foreach (var y in SanPhamViewModels.Where(c => c.ChiTietSp?.Id == x.HoaDonChiTiet?.IdChiTietSp))
                                    {
                                        <div class="row border shadow mb-3" style="background-color: white; border-radius: 25px">
                                            <div class="d-flex align-items-center p-3">
                                                <div class="col">
                                                    <a href=""><img src="@y.ChiTietSp?.Anh" class="w-50" /></a>
                                                </div>
                                                <div class="col">
                                                    <p>@y.SanPham?.Ten</p>
                                                    <p class="text-muted">Màu sắc : @y.MauSac?.Ten</p>
                                                </div>
                                                <div class="col">
                                                    <p><strong>@string.Format("{0:0,0}", y.ChiTietSp?.GiaBan) VNĐ</strong></p>
                                                </div>
                                                <div class="col">
                                                    <p>@x.HoaDon?.NgayTao</p>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                }
                            }
                            @if (HoaDonViewModels?.FirstOrDefault()?.HoaDon?.TinhTrang != 3)
                            {
                                <div class="row justify-content-end">
                                    <button class="btn btn-primary" data-toggle="modal" data-target="#popup">Hủy</button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @if (HoaDonViewModels?.FirstOrDefault()?.HoaDon?.NgayNhan == null){
            <Popup Message="Bạn có chắc muốn thay đổi trạng thái?" PopupType="Popup.PopupTypes.Confirm" Method="() => ChangeStatus(Status ?? 0)"></Popup>

        }
    </div>
}

@code {
    private List<HoaDonViewModel>? HoaDonViewModels = new List<HoaDonViewModel>();

    private List<SanPhamViewModel>? SanPhamViewModels = new List<SanPhamViewModel>();

    private int? Status;

    [Parameter]
    public Guid InvoiceId { get; set; }

    private string ActiveStatus(DateTime? val)
    {
        if (val != null){
            return "btn-success";
        }
        return "";
    }

    private void Display(int val){
        Status = val;
    }

    private async Task ChangeStatus(int val)
    {
        if (await Session.GetItemAsStringAsync("isLogin") != null)
        {
            using (var httpClient = new HttpClient())
            {
                httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", await Session.GetItemAsStringAsync("isLogin"));
                if (HoaDonViewModels != null)
                {
                    switch(val){
                        case 1:
                            HoaDonViewModels.First().HoaDon.NgayShip = DateTime.Now;
                            HoaDonViewModels.First().HoaDon.TinhTrang = 1;
                            break;
                        case 2:
                            HoaDonViewModels.First().HoaDon.NgayThanhToan = DateTime.Now;
                            HoaDonViewModels.First().HoaDon.NgayNhan = DateTime.Now;
                            HoaDonViewModels.First().HoaDon.TinhTrang = 3;
                            break;
                        case 3:
                            HoaDonViewModels.First().HoaDon.NgayThanhToan = DateTime.Now;
                            HoaDonViewModels.First().HoaDon.TinhTrang = 3;
                            break;
                        default:
                            HoaDonViewModels.First().HoaDon.TinhTrang = 4;
                            break;
                    }
                    using (var httpResponse = await httpClient.PutAsJsonAsync<HoaDon>("https://localhost:7033/api/hoadon/" + HoaDonViewModels.First().HoaDon.Id, HoaDonViewModels.First().HoaDon))
                    {
                        if (httpResponse.IsSuccessStatusCode){
                            HoaDonViewModels = await httpClient.GetFromJsonAsync<List<HoaDonViewModel>>("https://localhost:7033/api/hoadon/gethoadonviewmodel");
                        }
                    }
                }
            }
        }
    }

    protected async override Task OnInitializedAsync()
    {
        using (var httpClient = new HttpClient())
        {
            httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", await Session.GetItemAsStringAsync("isLogin"));
            HoaDonViewModels = await httpClient.GetFromJsonAsync<List<HoaDonViewModel>>("https://localhost:7033/api/hoadon/gethoadonviewmodel");
            SanPhamViewModels = await httpClient.GetFromJsonAsync<List<SanPhamViewModel>>("https://localhost:7033/api/sanpham/getsanphamviewmodel");
            if (HoaDonViewModels != null)
            {
                HoaDonViewModels = HoaDonViewModels.Where(c => c.HoaDon?.Id == InvoiceId).ToList();
            }
        }
    }
}
