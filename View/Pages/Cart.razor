@page "/giohang"
@inject ISessionStorageService SessionStorageService;
@inject HttpClient HttpClient

<PageTitle>Giỏ hàng</PageTitle>

<div class="row mt-3">
    <div class="col-lg-12">
        <div class="card">
            <div class="card-body">
                <div class="card-title">Quản lý giỏ hàng</div> <hr />
                <div class="row d-flex justify-content-center my-4">
                    <div class="col-md-8">
                        <div class="card mb-4">
                            <div class="card-body">
                                @if (Model != null)
                                {
                                    @foreach (var x in Model.Select((value, i) => new { value, i }))
                                    {
                                        <div>
                                            <div class="row p-3">
                                                <div class="col-lg-3 col-md-12 mb-4 mb-lg-0" style="background-color: #fff; border-radius: 30px">
                                                    <div class="p-4">
                                                        <img src="@x.value.SanPhamViewModel?.ChiTietSp?.Anh"
                                                     class="w-100" />
                                                    </div>
                                                </div>

                                                <div class="col-lg-5 col-md-6 mb-4 mb-lg-0">
                                                    <p><strong>@x.value.SanPhamViewModel?.SanPham?.Ten</strong></p>
                                                    <p>Màu sắc: @x.value.SanPhamViewModel?.MauSac?.Ten</p>
                                                    <button @onclick="() => RemoveCart(x.value.SanPhamViewModel?.ChiTietSp?.Id)" class="btn btn-danger btn-sm mb-2">
                                                        <i class="fa fa-trash"></i>
                                                    </button>
                                                </div>

                                                <div class="col-lg-4 col-md-6 mb-4 mb-lg-0">
                                                    <div class="d-flex mb-4" style="max-width: 300px">
                                                        <button type="button" @onclick="() => Reduce(x.i)" class="btn btn-primary px-3">
                                                            <i class="fa fa-minus"></i>
                                                        </button>

                                                        <div class="w-100">
                                                            <input min="1" max="50" name="quantity" value="@x.value.Quantity" type="number" class="form-control" />
                                                        </div>

                                                        <button @onclick="() => Increase(x.i)" class="btn btn-primary px-3">
                                                            <i class="fa fa-plus"></i>
                                                        </button>
                                                    </div>
                                                    <p class="text-md-center">
                                                        @{
                                                            var total = Convert.ToInt32(x.value.SanPhamViewModel?.ChiTietSp?.GiaBan) * Convert.ToInt32(x.value.Quantity);
                                                        }
                                                        <strong>@string.Format("{0:0,0}", total) VNĐ</strong>
                                                    </p>

                                                    <div class="text-center mt-3">
                                                        <button type="submit" value="@x.value.SanPhamViewModel?.ChiTietSp?.Id" name="SanPhamViewModel.ChiTietSp.Id" class="btn btn-warning w-100">
                                                            Cập nhật
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <hr class="my-4" />

                                    }
                                }
                                <a href="/banhang" class="btn btn-success">Quay về trang bán hàng</a>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="card mb-4">
                            <div class="card-header">
                                <h5>Hóa đơn</h5>
                            </div>
                            <div class="card-body">
                                <div class="form-group">
                                    <label>Tên người nhận</label>
                                    <input class="form-control" @bind="HoaDon.TenNguoiNhan" placeholder="Nhập tên người nhận"></input>
                                </div>
                                <div class="form-group">
                                    <label>Địa chỉ</label>
                                    <input class="form-control" name="DiaChi" placeholder="Nhập địa chỉ" @bind="HoaDon.DiaChi"></input>
                                </div>
                                <div class="form-group">
                                    <label>Số điện thoại</label>
                                    <input class="form-control" name="Sdt" placeholder="Nhập số điện thoại" @bind="HoaDon.Sdt"></input>
                                </div>
                                <hr />
                                <strong>Tổng tiền: @string.Format("{0:0,0}", Total) VNĐ</strong>
                                <button @onclick="AddOrder" class="btn btn-primary btn-lg btn-block mt-3">
                                    Thanh toán
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<GioHangViewModel>? Model;
    private HoaDon HoaDon = new HoaDon() { Id = Guid.NewGuid() };
    private decimal? Total = 0;

    protected override async Task OnInitializedAsync()
    {
        Model = await SessionStorageService.GetItemAsync<List<GioHangViewModel>>("cart");
        if (Model != null)
        {
            Total = Model.Sum(c => c.SanPhamViewModel?.ChiTietSp?.GiaBan * c.Quantity);
        }
    }

    private async Task Increase(int id){
        var result = Model?[id];
        List<GioHangViewModel> cart = await SessionStorageService.GetItemAsync<List<GioHangViewModel>>("cart");
        if(result != null){
            result.Quantity += 1;
            cart[id] = result;
        }
        await SessionStorageService.SetItemAsync<List<GioHangViewModel>>("cart", cart);
    }

    private async Task Reduce(int id)
    {
        var result = Model?[id];
        List<GioHangViewModel> cart = await SessionStorageService.GetItemAsync<List<GioHangViewModel>>("cart");
        if (result != null && result.Quantity > 1)
        {
            result.Quantity -= 1;
            cart[id] = result;
        }else{
            cart.RemoveAt(id);
            Model?.RemoveAt(id);
            await SessionStorageService.SetItemAsync<List<GioHangViewModel>>("cart", cart);
        }
        await SessionStorageService.SetItemAsync<List<GioHangViewModel>>("cart", cart);
    }

    private async Task<int> IsExist(Guid? id)
    {
        List<GioHangViewModel> cart = await SessionStorageService.GetItemAsync<List<GioHangViewModel>>("cart");
        if (cart != null)
        {
            for (int i = 0; i < cart.Count; i++)
            {
                var result = cart[i]?.SanPhamViewModel?.ChiTietSp?.Id.Equals(id);
                if (result ?? false)
                {
                    return i;
                }
            }
        }
        return -1;
    }

    private async Task RemoveCart(Guid? id)
    {
        List<GioHangViewModel> cart = await SessionStorageService.GetItemAsync<List<GioHangViewModel>>("cart");
        int index = await IsExist(id);
        if (index != -1)
        {
            cart.RemoveAt(index);
            await SessionStorageService.SetItemAsync<List<GioHangViewModel>>("cart", cart);
            Model = await SessionStorageService.GetItemAsync<List<GioHangViewModel>>("cart");
        }
    }

    private async Task AddOrder()
    {
        if (await SessionStorageService.GetItemAsync<List<GioHangViewModel>>("cart") != null)
        {
            if(Model != null){
                HoaDon.NgayTao = DateTime.Now;
                using (var httpClient = new HttpClient())
                {
                    await httpClient.PostAsJsonAsync<HoaDon>("https://localhost:7033/api/hoadon", HoaDon);
                    foreach (var x in Model)
                    {
                        var result = new HoaDonChiTiet()
                            {
                                IdHoaDon = HoaDon.Id,
                                IdChiTietSp = x.SanPhamViewModel?.ChiTietSp?.Id ?? Guid.NewGuid(),
                                DonGia = x.SanPhamViewModel?.ChiTietSp?.GiaBan ?? 0,
                                SoLuong = x.Quantity
                            };
                        await httpClient.PostAsJsonAsync<HoaDonChiTiet>("https://localhost:7033/api/hoadonchitiet", result);
                    }
                }
                await SessionStorageService.RemoveItemAsync("cart");
                Model = null; HoaDon = new HoaDon();
            }
        }
    }
}